{"version":3,"sources":["components/DropdownNav.js","components/LogoTitle.js","components/NavBar.js","views/HomePage.js","views/App.js","reportWebVitals.js","redux/actionConstants.js","redux/storeConstants.js","redux/reducers/login.js","redux/reducers/user.js","redux/store.js","index.js"],"names":["DropdownNav","Dropdown","Toggle","variant","style","backgroundColor","borderColor","Menu","className","Item","href","LogoTitle","alt","width","height","src","IMAGE_PATH","marginRight","NavBar","Nav","defaultActiveKey","as","Link","eventKey","HomePage","useState","window","innerHeight","screenHeight","setScreenHeight","innerWidth","screenWidth","setScreenWidth","useEffect","addEventListener","Container","fluid","Row","Col","sm","marginTop","marginBottom","Button","process","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_NETWORK_ERROR","LOGOUT","LOGIN_STATE","INITIAL_STATE","index","name","rootReducer","combineReducers","login","state","action","type","user","paylod","payload","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.35f10481.chunk.js","sourcesContent":["import React from \"react\"\nimport { Dropdown } from \"react-bootstrap\"\nimport { AiOutlineBars } from \"react-icons/ai\"\n\nconst DropdownNav = () => {\n\n   return (\n      <Dropdown>\n         <Dropdown.Toggle\n            variant=\"success\"\n            style={{ backgroundColor: \"#5B3080\", borderColor: \"#5B3080\" }}\n         >\n            <AiOutlineBars />\n         </Dropdown.Toggle>\n         <Dropdown.Menu className=\"nav-bar-font\">\n            <Dropdown.Item href=\"#/action-1\">About Us</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">What is Kendo?</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Join</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-4\">Resources</Dropdown.Item>\n         </Dropdown.Menu>\n      </Dropdown>\n   )\n}\n\nexport default DropdownNav","import React from \"react\"\nimport { IMAGE_PATH } from \"../views/App\"\n\nconst LogoTitle = () => {\n   return (\n      <div className=\"logo-title-layout\">\n         <img\n            alt=\"kendo uw logo\"\n            width=\"113\"\n            height=\"113\"\n            src={`${IMAGE_PATH}/logo.png`}\n            style={{ marginRight: \"1rem\" }}\n         />\n         <p className=\"logo-title-font\">UW Kendo</p>\n      </div>\n   )\n}\n\nexport default LogoTitle","import React from \"react\"\nimport { Nav } from \"react-bootstrap\"\n\nconst NavBar = () => {\n   return (\n      <Nav defaultActiveKey=\"/home\" as=\"ul\" className=\"nav-bar-font\">\n         <Nav.Item as=\"li\">\n            <Nav.Link href=\"/home\">About Us</Nav.Link>\n         </Nav.Item>\n         <Nav.Item as=\"li\">\n            <Nav.Link eventKey=\"link-1\">What is Kendo?</Nav.Link>\n         </Nav.Item>\n         <Nav.Item as=\"li\">\n            <Nav.Link eventKey=\"link-2\">Join</Nav.Link>\n         </Nav.Item>\n         <Nav.Item as=\"li\">\n            <Nav.Link eventKey=\"link-3\">Resources</Nav.Link>\n         </Nav.Item>\n      </Nav>\n   )\n}\n\nexport default NavBar","import React, { useEffect, useState } from \"react\"\nimport { Button, Col, Container, Row } from \"react-bootstrap\"\nimport DropdownNav from \"../components/DropdownNav\"\nimport LogoTitle from \"../components/LogoTitle\"\nimport NavBar from \"../components/NavBar\"\n\nconst HomePage = () => {\n   const [screenHeight, setScreenHeight] = useState(window.innerHeight)\n   const [screenWidth, setScreenWidth] = useState(window.innerWidth)\n\n   useEffect(() => {\n      window.addEventListener(\"resize\", () => {\n         setScreenHeight(window.innerHeight)\n         setScreenWidth(window.innerWidth)\n      })\n   }, [])\n\n   return (\n      <Container fluid>\n         <Row>\n            <Col sm={1} />\n            <Col sm={10}>\n               <div\n                  className=\"top-bar-layout\"\n                  style={{ marginTop: screenHeight * 0.1 }}\n               >\n                  <LogoTitle />\n                  {\n                     screenWidth < 1192 ?\n                     <DropdownNav />\n                     :\n                     <NavBar />\n                  }\n               </div>\n               <div\n                  style={{\n                     backgroundColor: \"#5B3080\",\n                     width: \"100%\",\n                     height: screenHeight * 0.5,\n                     marginTop: \"2.4rem\",\n                     marginBottom: \"2.4rem\"\n                  }}\n               />\n               <div className=\"home-join-layout\">\n                  <p className=\"home-join-font\">\n                     Come join the Kendo Club at the University of Washington today!\n                  </p>\n                  <Button\n                     className=\"home-join-button-font\"\n                     variant=\"primary\"\n                     style={{ backgroundColor: \"#5B3080\", borderColor: \"#5B3080\" }}\n                  >\n                     Join our mailing list\n                  </Button>\n               </div>\n            </Col>\n            <Col sm={1} />\n         </Row>\n      </Container>\n   )\n}\n\nexport default HomePage","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport HomePage from \"./HomePage\"\nexport const IMAGE_PATH = process.env.PUBLIC_URL + \"/images\"\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          component={HomePage}\n        />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","export const LOGIN_SUCCESS = \"login success\"\nexport const LOGIN_FAILURE = \"login failure\"\nexport const LOGIN_NETWORK_ERROR = \"login network error\"\nexport const LOGOUT = \"log out\"\n","export const LOGIN_STATE = {\n   LOGGED_IN: \"logged in\",\n   LOGGED_OUT: \"logged out\",\n   LOGGED_FAILURE: \"logged failure\",\n   NETWORK_ERROR: \"network error\"\n}","import {\n   LOGIN_FAILURE,\n   LOGIN_NETWORK_ERROR,\n   LOGIN_SUCCESS,\n   LOGOUT\n} from \"../actionConstants\"\nimport { LOGIN_STATE } from \"../storeConstants\"\n\nexport const INITIAL_STATE = LOGIN_STATE.LOGGED_OUT\n\nexport const loginReducer = (state=INITIAL_STATE, action) => {\n   switch(action.type) {\n      case LOGIN_SUCCESS:\n         return LOGIN_STATE.LOGGED_IN\n      case LOGIN_FAILURE:\n         return LOGIN_STATE.LOGGED_FAILURE\n      case LOGIN_NETWORK_ERROR:\n         return LOGIN_STATE.NETWORK_ERROR\n      case LOGOUT:\n         return LOGIN_STATE.LOGGED_OUT\n      default:\n         return state\n   }\n}","import { LOGIN_SUCCESS, LOGOUT } from \"../actionConstants\"\n\nexport const INITIAL_STATE = {\n   index: -1,\n   name: \"\",\n}\n\nexport const userReducer = (state=INITIAL_STATE, action) => {\n   switch(action.type) {\n      case LOGIN_SUCCESS:\n         return {\n            ...INITIAL_STATE,\n            index: action.paylod.index,\n            name: action.payload.name\n         }\n      case LOGOUT:\n         return {\n            ...INITIAL_STATE\n         }\n      default:\n         return state\n   }\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport { loginReducer } from \"./reducers/login\"\nimport { userReducer } from \"./reducers/user\"\n\nexport const rootReducer = combineReducers({\n    login: loginReducer,\n    user: userReducer,\n})\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware))","import \"./styles/styles.css\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./views/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport store from \"./redux/store\"\nimport { Provider as ReduxProvider } from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}